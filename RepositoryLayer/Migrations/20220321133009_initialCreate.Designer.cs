// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RepositoryLayer;

namespace RepositoryLayer.Migrations
{
    [DbContext(typeof(ProductDbContext))]
    [Migration("20220321133009_initialCreate")]
    partial class initialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("DomainLayer.ProductImages", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("imagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("productId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("productId");

                    b.ToTable("images");
                });

            modelBuilder.Entity("DomainLayer.ProductLayer.Colors", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("colors");
                });

            modelBuilder.Entity("DomainLayer.ProductLayer.ProductBrand", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("productBrands");
                });

            modelBuilder.Entity("DomainLayer.ProductLayer.ProductCamFeatures", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("primaryCam")
                        .HasColumnType("int");

                    b.Property<int>("secondaryCam")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("productCam");
                });

            modelBuilder.Entity("DomainLayer.ProductLayer.ProductColor", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("colorsId")
                        .HasColumnType("int");

                    b.Property<int>("productId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("colorsId");

                    b.HasIndex("productId");

                    b.ToTable("productColors");
                });

            modelBuilder.Entity("DomainLayer.ProductLayer.ProductOsFeatures", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("operatingSystem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("processor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("processorCore")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("ProductOsFeatures");
                });

            modelBuilder.Entity("DomainLayer.ProductLayer.ProductRams", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("productId")
                        .HasColumnType("int");

                    b.Property<int>("ramId")
                        .HasColumnType("int");

                    b.Property<int?>("ramsid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("productId");

                    b.HasIndex("ramsid");

                    b.ToTable("productRams");
                });

            modelBuilder.Entity("DomainLayer.ProductLayer.ProductSimType", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("productSimTypes");
                });

            modelBuilder.Entity("DomainLayer.ProductLayer.ProductStorage", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("productId")
                        .HasColumnType("int");

                    b.Property<int>("storageId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("productId");

                    b.HasIndex("storageId");

                    b.ToTable("productStorages");
                });

            modelBuilder.Entity("DomainLayer.ProductLayer.ProductType", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("types");
                });

            modelBuilder.Entity("DomainLayer.ProductLayer.Products", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("brandId")
                        .HasColumnType("int");

                    b.Property<int>("camFeaturesId")
                        .HasColumnType("int");

                    b.Property<string>("model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("osFeaturesid")
                        .HasColumnType("int");

                    b.Property<int>("osProcessorId")
                        .HasColumnType("int");

                    b.Property<int>("price")
                        .HasColumnType("int");

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.Property<int>("simTypeId")
                        .HasColumnType("int");

                    b.Property<int>("typeId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("brandId");

                    b.HasIndex("camFeaturesId");

                    b.HasIndex("osFeaturesid");

                    b.HasIndex("simTypeId");

                    b.HasIndex("typeId");

                    b.ToTable("products");
                });

            modelBuilder.Entity("DomainLayer.ProductLayer.Rams", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("ram")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("ram");
                });

            modelBuilder.Entity("DomainLayer.ProductLayer.Storage", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("storage")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("storages");
                });

            modelBuilder.Entity("DomainLayer.ProductImages", b =>
                {
                    b.HasOne("DomainLayer.ProductLayer.Products", "product")
                        .WithMany()
                        .HasForeignKey("productId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("product");
                });

            modelBuilder.Entity("DomainLayer.ProductLayer.ProductColor", b =>
                {
                    b.HasOne("DomainLayer.ProductLayer.Colors", "colors")
                        .WithMany()
                        .HasForeignKey("colorsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DomainLayer.ProductLayer.Products", "product")
                        .WithMany()
                        .HasForeignKey("productId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("colors");

                    b.Navigation("product");
                });

            modelBuilder.Entity("DomainLayer.ProductLayer.ProductRams", b =>
                {
                    b.HasOne("DomainLayer.ProductLayer.Products", "product")
                        .WithMany()
                        .HasForeignKey("productId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DomainLayer.ProductLayer.Rams", "rams")
                        .WithMany()
                        .HasForeignKey("ramsid");

                    b.Navigation("product");

                    b.Navigation("rams");
                });

            modelBuilder.Entity("DomainLayer.ProductLayer.ProductStorage", b =>
                {
                    b.HasOne("DomainLayer.ProductLayer.Products", "product")
                        .WithMany()
                        .HasForeignKey("productId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DomainLayer.ProductLayer.Storage", "storage")
                        .WithMany()
                        .HasForeignKey("storageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("product");

                    b.Navigation("storage");
                });

            modelBuilder.Entity("DomainLayer.ProductLayer.Products", b =>
                {
                    b.HasOne("DomainLayer.ProductLayer.ProductBrand", "brand")
                        .WithMany()
                        .HasForeignKey("brandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DomainLayer.ProductLayer.ProductCamFeatures", "camFeatures")
                        .WithMany()
                        .HasForeignKey("camFeaturesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DomainLayer.ProductLayer.ProductOsFeatures", "osFeatures")
                        .WithMany()
                        .HasForeignKey("osFeaturesid");

                    b.HasOne("DomainLayer.ProductLayer.ProductSimType", "simType")
                        .WithMany()
                        .HasForeignKey("simTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DomainLayer.ProductLayer.ProductType", "type")
                        .WithMany()
                        .HasForeignKey("typeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("brand");

                    b.Navigation("camFeatures");

                    b.Navigation("osFeatures");

                    b.Navigation("simType");

                    b.Navigation("type");
                });
#pragma warning restore 612, 618
        }
    }
}
